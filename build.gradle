buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

configurations {
    deployerJars
}

dependencies {
    deployerJars 'org.apache.maven.wagon:wagon-ftp:2.2'
}

apply plugin: 'forge'
apply plugin: 'curseforge'
apply plugin: 'maven'

version = "1.0.0.${System.env.BUILD_NUMBER}"
group= "com.arisux"
archivesBaseName = "mdxlib"

tasks.withType(JavaCompile) {
	sourceCompatibility = "1.7"
	targetCompatibility = "1.7"
	options.encoding = 'UTF-8'
}

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "eclipse"
    mappings = "stable_12"
}

def sharedManifest = {
    attributes 'FMLAT': 'mdxlib_at.cfg'
    attributes 'FMLCorePlugin' : 'com.arisux.amdxlib.FMLModule'
	attributes 'FMLCorePluginContainsFMLMod' : 'true'
}

jar {
	archiveName = "[${minecraft.getApiVersion()}][${project.version}] ${project.archivesBaseName}.jar"
    manifest sharedManifest
}

task srcJar(type: Jar) {
    from sourceSets.main.allSource
	archiveName = "[${minecraft.getApiVersion()}][${project.version}] ${project.archivesBaseName}-sources.jar"
    classifier = 'sources'
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
	archiveName = "[${minecraft.getApiVersion()}][${project.version}] ${project.archivesBaseName}-deobf.jar"
    classifier = 'deobf'
    manifest sharedManifest
}

artifacts {
    archives srcJar, deobfJar
}

curse {
    displayName = "${project.archivesBaseName} ${project.version}"
    artifact = file("${project.buildDir}/libs/[${minecraft.getApiVersion()}][${project.version}] ${project.archivesBaseName}.jar")
    projectId = '248278'
    apiKey = project.curseForgeApiKey
    releaseType = 'beta'
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
    
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task("publishToMaven", dependsOn:"build") {
    description = "Uploads the artifacts generated during the build process to the aliensvspredator.org maven repository"

    uploadArchives {
        repositories.mavenDeployer {
            configuration = configurations.deployerJars
            repository(url: "ftp://aliensvspredator.org/maven/") {
                authentication(userName: project.mavenUsername, password: project.mavenPassword)
            }
        }
    }
}